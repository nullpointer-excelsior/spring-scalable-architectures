version: '3.8'

services:

  service-discovery:
    build:
      context: ./service-discovery
    container_name: service-discovery
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - spring-cloud-microservice

  auth-server:
    build:
      context: ./authserver
    container_name: auth-server
    ports:
      - "9000:9000"
    environment:
      - SPRING_CONFIG_LOCATION=file:/app/application.yml
    volumes:
      - ./docker/authserver/application.yml:/app/application.yml
    networks:
      - spring-cloud-microservice

  checkout-gateway:
    build:
      context: ./gateway
    container_name: checkout-gateway
    ports:
      - "8080:8080"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
    networks:
      - spring-cloud-microservice

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=file:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - ./docker/config-server/config:/app/config
    networks:
      - spring-cloud-microservice
  
  carts-ms:
    build:
      context: ./carts-ms
    container_name: carts-ms
    depends_on:
      service-discovery:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
    networks:
      - spring-cloud-microservice

  products-ms:
    build:
      context: ./products-ms
    container_name: products-ms
    depends_on:
      service-discovery:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
    networks:
      - spring-cloud-microservice
    
  postgres:
    image: postgres:latest
    container_name: postgres-service
    restart: always
    environment:
      POSTGRES_USER: checkout 
      POSTGRES_PASSWORD: checkout
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U checkout"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring-cloud-microservice
      
networks:
  spring-cloud-microservice:
    driver: bridge
