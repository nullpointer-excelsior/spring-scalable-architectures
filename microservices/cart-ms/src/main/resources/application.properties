spring.application.name=Cart-ms
server.port=8082
spring.datasource.url=jdbc:postgresql://localhost:5432/cart_ms
spring.datasource.username=cart_ms
spring.datasource.password=cart_ms
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=update
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.io.micrometer.registry.otlp=ERROR
# loki url
logging.loki.url=http://localhost:3100/loki/api/v1/push
# For OTLP - OTLP Prometheus endpoint, OTLP requires pushing
management.otlp.metrics.export.url=http://localhost:9090/api/v1/otlp/v1/metrics
# only for demo purposes
management.otlp.metrics.export.step=2s
# All traces should be sent to latency analysis tool
management.tracing.sampling.probability=1.0
# OTLP endpoint - OTLP Tempo endpoint
management.zipkin.tracing.endpoint=http://localhost:4318/v1/traces
management.zipkin.tracing.encoding=PROTO3

# For Exemplars to work we need histogram buckets - TODO: Micrometer OTLP doesn't yet support exemplars
management.metrics.distribution.percentiles-histogram.http.server.requests=true