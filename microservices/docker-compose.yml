version: '3.8'

services:

  checkout-gateway:
    build:
      context: ./gateway
    container_name: checkout-gateway
    ports:
      - "8080:8080"
    environment:
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=http://prometheus:9090/api/v1/otlp/v1/metrics
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:4318/v1/traces
      - LOGGING_LOKI_URL=http://loki:3100/loki/api/v1/push
      - ECOMMERCE_CHECKOUT_PRODUCTS_URL=http://products-ms:8081
      - ECOMMERCE_CHECKOUT_CART_URL=http://cart-ms:8082
    networks:
      - spring-cloud-microservice
  
  cart-ms:
    build:
      context: ./cart-ms
    container_name: cart-ms
    depends_on:
      - postgres
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cart_ms
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=http://prometheus:9090/api/v1/otlp/v1/metrics
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:4318/v1/traces
      - LOGGING_LOKI_URL=http://loki:3100/loki/api/v1/push
    networks:
      - spring-cloud-microservice

  products-ms:
    build:
      context: ./products-ms
    container_name: products-ms
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/products_ms
      - MANAGEMENT_OTLP_METRICS_EXPORT_URL=http://prometheus:9090/api/v1/otlp/v1/metrics
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:4318/v1/traces
      - LOGGING_LOKI_URL=http://loki:3100/loki/api/v1/push
    networks:
      - spring-cloud-microservice
    
  postgres:
    image: postgres:latest
    container_name: postgres-service
    restart: always
    environment:
      POSTGRES_USER: checkout 
      POSTGRES_PASSWORD: checkout
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring-cloud-microservice
  #    collector:
  #        image: otel/opentelemetry-collector:0.103.1
  #        extra_hosts: ['host.docker.internal:host-gateway']
  #        volumes:
  #            - ./docker/otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
  #        ports:
  #            - 1888:1888 # pprof extension
  #            - 8888:8888 # Prometheus metrics exposed by the collector
  #            - 8889:8889 # Prometheus exporter metrics
  #            - 13133:13133 # health_check extension
  #            - 4318:4318 # OTLP http receiver (for metrics and spans)
  #            - 55679:55679 # zpages extension
  prometheus:
    image: prom/prometheus:v2.54.1 # https://hub.docker.com/r/prom/prometheus
    container_name: prometheus-service
    extra_hosts: ['host.docker.internal:host-gateway']
    command:
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - spring-cloud-microservice

  grafana:
    image: grafana/grafana:10.4.10 # https://hub.docker.com/r/grafana/grafana/tags
    container_name: grafana-service
    extra_hosts: ['host.docker.internal:host-gateway']
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    networks:
      - spring-cloud-microservice

  tempo:
    image: grafana/tempo:2.4.2 # https://hub.docker.com/r/grafana/tempo/tags and https://github.com/grafana/tempo/releases
    container_name: tempo-service
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ['-config.file=/etc/tempo.yml']
    volumes:
      - tempo:/tmp/tempo
      - ./docker/grafana/tempo.yml:/etc/tempo.yml:ro
    ports:
      - "3200:3200"    # tempo
      - "4318:4318"  # otlp http
    networks:
      - spring-cloud-microservice

  loki:
    image: grafana/loki:3.1.2 # https://hub.docker.com/r/grafana/loki/tags and https://github.com/grafana/loki/releases
    container_name: loki-service
    extra_hosts: ['host.docker.internal:host-gateway']
    command: ['-config.file=/etc/loki/local-config.yaml']
    ports:
      - "3100:3100"
    networks:
      - spring-cloud-microservice

volumes:
  prometheus:
    driver: local
  tempo:
    driver: local
networks:
  spring-cloud-microservice:
    driver: bridge